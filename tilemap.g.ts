// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`32000a`, img`
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile1], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`7d`, img`
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
...............................................................................2....................2........................
.................................................................2222..........2.......2...........222.......................
...............................................................................2.......2......22.............................
.....................................................22222222222......222..22......2.....2..2................................
...................................................................................2........2.........22.....................
...................................................................2222..........................22..........................
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile1,myTiles.tile3,myTiles.tile4], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "Spikes":
            case "tile2":return tile2;
            case "BasicTile":
            case "tile1":return tile1;
            case "transparency16":return transparency16;
            case "SpikesInv":
            case "tile3":return tile3;
            case "finishTile":
            case "tile4":return tile4;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
